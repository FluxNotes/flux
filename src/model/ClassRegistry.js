// GENERATED CODE
// Manual modification is NOT RECOMMENDED as changes will be overwritten the next time the classes are generated.


/**
 * The Class Registry concept is designed to allow for users of the SHR ES6 classes to fix bugs and add extensions
 * in a way that makes maintaining those changes across re-generations easier.
 * Users should subclass any relevant classes, then update the class registry
 * (in a separate location, since the file is generated)
 * with a reference to the new class.
 * Note: this class structure is needed to avoid circular dependency issues,
 * as this refers to all the individual ES6 classes, and the individual ES6 classes all refer to this.
 */
class Registry {
  initialize() {
    this.internalRegistry = {
      'brca': {
        'AverageCEP17SignalsPerCell': require('./brca/AverageCEP17SignalsPerCell').default,
        'AverageHER2SignalsPerCell': require('./brca/AverageHER2SignalsPerCell').default,
        'AverageStainingIntensity': require('./brca/AverageStainingIntensity').default,
        'BreastCancerDisorderPresent': require('./brca/BreastCancerDisorderPresent').default,
        'BreastCancerHistologicGrade': require('./brca/BreastCancerHistologicGrade').default,
        'BreastCancerStagePanel': require('./brca/BreastCancerStagePanel').default,
        'BreastSite': require('./brca/BreastSite').default,
        'BreastSpecimen': require('./brca/BreastSpecimen').default,
        'ColdIschemiaTime': require('./brca/ColdIschemiaTime').default,
        'CompleteMembraneStainingPercent': require('./brca/CompleteMembraneStainingPercent').default,
        'DCISNuclearGrade': require('./brca/DCISNuclearGrade').default,
        'EstrogenReceptorStatus': require('./brca/EstrogenReceptorStatus').default,
        'HER2byFISH': require('./brca/HER2byFISH').default,
        'HER2byIHC': require('./brca/HER2byIHC').default,
        'HER2ReceptorStatus': require('./brca/HER2ReceptorStatus').default,
        'HER2toCEP17Ratio': require('./brca/HER2toCEP17Ratio').default,
        'MammaprintRecurrenceScore': require('./brca/MammaprintRecurrenceScore').default,
        'MitoticCountScore': require('./brca/MitoticCountScore').default,
        'MorphologyBehavior': require('./brca/MorphologyBehavior').default,
        'NuclearPleomorphismScore': require('./brca/NuclearPleomorphismScore').default,
        'NuclearPositivity': require('./brca/NuclearPositivity').default,
        'OncotypeDxDCISRecurrenceScore': require('./brca/OncotypeDxDCISRecurrenceScore').default,
        'OncotypeDxInvasiveRecurrenceScore': require('./brca/OncotypeDxInvasiveRecurrenceScore').default,
        'ProgesteroneReceptorStatus': require('./brca/ProgesteroneReceptorStatus').default,
        'ProsignaRecurrenceScore': require('./brca/ProsignaRecurrenceScore').default,
        'TubuleFormationScore': require('./brca/TubuleFormationScore').default,
      },
      'oncocore': {
        'CancerDisorderPresent': require('./oncocore/CancerDisorderPresent').default,
        'CancerGeneticMarkerAnalysisResult': require('./oncocore/CancerGeneticMarkerAnalysisResult').default,
        'CancerHistologicGrade': require('./oncocore/CancerHistologicGrade').default,
        'CancerHistologicType': require('./oncocore/CancerHistologicType').default,
        'CancerProgression': require('./oncocore/CancerProgression').default,
        'CancerProgressionEvidence': require('./oncocore/CancerProgressionEvidence').default,
        'CancerStagePanel': require('./oncocore/CancerStagePanel').default,
        'CancerStagePanelMember': require('./oncocore/CancerStagePanelMember').default,
        'CancerStageSuffix': require('./oncocore/CancerStageSuffix').default,
        'CancerStageTiming': require('./oncocore/CancerStageTiming').default,
        'CancerStagingSystem': require('./oncocore/CancerStagingSystem').default,
        'DNARegionName': require('./oncocore/DNARegionName').default,
        'DNASequenceVariantId': require('./oncocore/DNASequenceVariantId').default,
        'DNASequenceVariantName': require('./oncocore/DNASequenceVariantName').default,
        'DNASequenceVariantType': require('./oncocore/DNASequenceVariantType').default,
        'ECOGPerformanceStatus': require('./oncocore/ECOGPerformanceStatus').default,
        'GeneName': require('./oncocore/GeneName').default,
        'GeneticMarkerAnalysisResult': require('./oncocore/GeneticMarkerAnalysisResult').default,
        'GenomicSourceClass': require('./oncocore/GenomicSourceClass').default,
        'KarnofskyPerformanceStatus': require('./oncocore/KarnofskyPerformanceStatus').default,
        'RadiationDosePerFraction': require('./oncocore/RadiationDosePerFraction').default,
        'RadiationFractionsDelivered': require('./oncocore/RadiationFractionsDelivered').default,
        'RadiationProcedurePerformed': require('./oncocore/RadiationProcedurePerformed').default,
        'TNMClinicalDistantMetastasesClassification': require('./oncocore/TNMClinicalDistantMetastasesClassification').default,
        'TNMClinicalPrimaryTumorClassification': require('./oncocore/TNMClinicalPrimaryTumorClassification').default,
        'TNMClinicalPrognosticStagePanel': require('./oncocore/TNMClinicalPrognosticStagePanel').default,
        'TNMClinicalRegionalNodesClassification': require('./oncocore/TNMClinicalRegionalNodesClassification').default,
        'TNMClinicalStageGroup': require('./oncocore/TNMClinicalStageGroup').default,
        'TNMPathologicPrognosticStagePanel': require('./oncocore/TNMPathologicPrognosticStagePanel').default,
        'TNMPathologicStageGroup': require('./oncocore/TNMPathologicStageGroup').default,
        'TNMStagePanelMember': require('./oncocore/TNMStagePanelMember').default,
        'TotalRadiationDoseDelivered': require('./oncocore/TotalRadiationDoseDelivered').default,
        'TumorMarker': require('./oncocore/TumorMarker').default,
      },
      'shr.adverse': {
        'ActionTaken': require('./shr/adverse/ActionTaken').default,
        'AdverseDrugReaction': require('./shr/adverse/AdverseDrugReaction').default,
        'AdverseEvent': require('./shr/adverse/AdverseEvent').default,
        'AdverseEventCondition': require('./shr/adverse/AdverseEventCondition').default,
        'AssociatedStudy': require('./shr/adverse/AssociatedStudy').default,
        'CausalAttribution': require('./shr/adverse/CausalAttribution').default,
        'CauseCategory': require('./shr/adverse/CauseCategory').default,
        'PossibleCause': require('./shr/adverse/PossibleCause').default,
        'PossibleDrugCause': require('./shr/adverse/PossibleDrugCause').default,
        'Seriousness': require('./shr/adverse/Seriousness').default,
        'ToxicAdverseDrugReaction': require('./shr/adverse/ToxicAdverseDrugReaction').default,
      },
      'shr.allergy': {
        'AllergyIntolerance': require('./shr/allergy/AllergyIntolerance').default,
        'AllergyIntoleranceReaction': require('./shr/allergy/AllergyIntoleranceReaction').default,
        'AllergyIntoleranceType': require('./shr/allergy/AllergyIntoleranceType').default,
        'Manifestation': require('./shr/allergy/Manifestation').default,
        'MostRecentOccurrenceTime': require('./shr/allergy/MostRecentOccurrenceTime').default,
        'SubstanceCategory': require('./shr/allergy/SubstanceCategory').default,
        'SubstanceCode': require('./shr/allergy/SubstanceCode').default,
      },
      'shr.base': {
        'Abatement': require('./shr/base/Abatement').default,
        'AbsenceAssertion': require('./shr/base/AbsenceAssertion').default,
        'ActionNotPerformed': require('./shr/base/ActionNotPerformed').default,
        'ActionPerformed': require('./shr/base/ActionPerformed').default,
        'ActionRequested': require('./shr/base/ActionRequested').default,
        'ActionRequestedAgainst': require('./shr/base/ActionRequestedAgainst').default,
        'ActionStatement': require('./shr/base/ActionStatement').default,
        'AlleviatingFactor': require('./shr/base/AlleviatingFactor').default,
        'ApplicableAgeRange': require('./shr/base/ApplicableAgeRange').default,
        'ApplicableSubpopulation': require('./shr/base/ApplicableSubpopulation').default,
        'AuthoredDateTime': require('./shr/base/AuthoredDateTime').default,
        'BodyStructurePresent': require('./shr/base/BodyStructurePresent').default,
        'Certainty': require('./shr/base/Certainty').default,
        'ClinicalNote': require('./shr/base/ClinicalNote').default,
        'ClinicalStatus': require('./shr/base/ClinicalStatus').default,
        'CodedLaboratoryObservation': require('./shr/base/CodedLaboratoryObservation').default,
        'CodedNonIndependentFinding': require('./shr/base/CodedNonIndependentFinding').default,
        'CodedNonLaboratoryObservation': require('./shr/base/CodedNonLaboratoryObservation').default,
        'CommunicationMethod': require('./shr/base/CommunicationMethod').default,
        'ComponentOnlyNonLaboratoryObservation': require('./shr/base/ComponentOnlyNonLaboratoryObservation').default,
        'Composition': require('./shr/base/Composition').default,
        'ConditionAbsentAssertion': require('./shr/base/ConditionAbsentAssertion').default,
        'ConditionCause': require('./shr/base/ConditionCause').default,
        'ConditionOrDiagnosisCode': require('./shr/base/ConditionOrDiagnosisCode').default,
        'ConditionPresentAssertion': require('./shr/base/ConditionPresentAssertion').default,
        'Criticality': require('./shr/base/Criticality').default,
        'DeltaFlag': require('./shr/base/DeltaFlag').default,
        'Entry': require('./shr/base/Entry').default,
        'EntryId': require('./shr/base/EntryId').default,
        'EntryType': require('./shr/base/EntryType').default,
        'ExacerbatingFactor': require('./shr/base/ExacerbatingFactor').default,
        'ExceptionValue': require('./shr/base/ExceptionValue').default,
        'ExistenceAssertion': require('./shr/base/ExistenceAssertion').default,
        'ExpectedMethod': require('./shr/base/ExpectedMethod').default,
        'ExpectedPerformanceTime': require('./shr/base/ExpectedPerformanceTime').default,
        'ExpectedPerformer': require('./shr/base/ExpectedPerformer').default,
        'ExpectedPerformerType': require('./shr/base/ExpectedPerformerType').default,
        'Finding': require('./shr/base/Finding').default,
        'FindingMethod': require('./shr/base/FindingMethod').default,
        'FindingResult': require('./shr/base/FindingResult').default,
        'FindingStatus': require('./shr/base/FindingStatus').default,
        'FindingTopicCode': require('./shr/base/FindingTopicCode').default,
        'HeadlessPanel': require('./shr/base/HeadlessPanel').default,
        'InformationItem': require('./shr/base/InformationItem').default,
        'InformationRecorder': require('./shr/base/InformationRecorder').default,
        'InformationSource': require('./shr/base/InformationSource').default,
        'Interpretation': require('./shr/base/Interpretation').default,
        'LaboratoryObservation': require('./shr/base/LaboratoryObservation').default,
        'LastUpdated': require('./shr/base/LastUpdated').default,
        'Metadata': require('./shr/base/Metadata').default,
        'Method': require('./shr/base/Method').default,
        'Narrative': require('./shr/base/Narrative').default,
        'NarrativeQualifier': require('./shr/base/NarrativeQualifier').default,
        'NarrativeText': require('./shr/base/NarrativeText').default,
        'NonIndependentFinding': require('./shr/base/NonIndependentFinding').default,
        'NonLaboratoryObservation': require('./shr/base/NonLaboratoryObservation').default,
        'ObjectIdentifier': require('./shr/base/ObjectIdentifier').default,
        'Observation': require('./shr/base/Observation').default,
        'Observer': require('./shr/base/Observer').default,
        'Onset': require('./shr/base/Onset').default,
        'Outcome': require('./shr/base/Outcome').default,
        'Panel': require('./shr/base/Panel').default,
        'PanelMembers': require('./shr/base/PanelMembers').default,
        'Participant': require('./shr/base/Participant').default,
        'Participation': require('./shr/base/Participation').default,
        'ParticipationPeriod': require('./shr/base/ParticipationPeriod').default,
        'ParticipationType': require('./shr/base/ParticipationType').default,
        'PatientInstructions': require('./shr/base/PatientInstructions').default,
        'PatientOrPractitioner': require('./shr/base/PatientOrPractitioner').default,
        'PatientOrPractitionerOrRelatedPerson': require('./shr/base/PatientOrPractitionerOrRelatedPerson').default,
        'PerformerInstructions': require('./shr/base/PerformerInstructions').default,
        'PersonOrDevice': require('./shr/base/PersonOrDevice').default,
        'PersonOrOrganization': require('./shr/base/PersonOrOrganization').default,
        'PractitionerOrDevice': require('./shr/base/PractitionerOrDevice').default,
        'PractitionerOrRelatedPerson': require('./shr/base/PractitionerOrRelatedPerson').default,
        'PresenceAssertion': require('./shr/base/PresenceAssertion').default,
        'PresentOnAdmission': require('./shr/base/PresentOnAdmission').default,
        'PresentOrAbsent': require('./shr/base/PresentOrAbsent').default,
        'QuantitativeNonIndependentFinding': require('./shr/base/QuantitativeNonIndependentFinding').default,
        'QuestionAnswer': require('./shr/base/QuestionAnswer').default,
        'QuestionText': require('./shr/base/QuestionText').default,
        'Reason': require('./shr/base/Reason').default,
        'RecordStatus': require('./shr/base/RecordStatus').default,
        'ReferenceRange': require('./shr/base/ReferenceRange').default,
        'RelatedRequest': require('./shr/base/RelatedRequest').default,
        'RelationshipExistenceAssertion': require('./shr/base/RelationshipExistenceAssertion').default,
        'RelevantTime': require('./shr/base/RelevantTime').default,
        'Requester': require('./shr/base/Requester').default,
        'RequestIntent': require('./shr/base/RequestIntent').default,
        'Section': require('./shr/base/Section').default,
        'SecurityLabel': require('./shr/base/SecurityLabel').default,
        'Severity': require('./shr/base/Severity').default,
        'ShrId': require('./shr/base/ShrId').default,
        'SimpleCodedLaboratoryObservation': require('./shr/base/SimpleCodedLaboratoryObservation').default,
        'SimpleCodedNonLaboratoryObservation': require('./shr/base/SimpleCodedNonLaboratoryObservation').default,
        'SimpleLaboratoryObservation': require('./shr/base/SimpleLaboratoryObservation').default,
        'SimpleNonLaboratoryObservation': require('./shr/base/SimpleNonLaboratoryObservation').default,
        'SpecificFocusOfFinding': require('./shr/base/SpecificFocusOfFinding').default,
        'StageDetail': require('./shr/base/StageDetail').default,
        'StageInformation': require('./shr/base/StageInformation').default,
        'StageSummary': require('./shr/base/StageSummary').default,
        'Tag': require('./shr/base/Tag').default,
        'WhenClinicallyRecognized': require('./shr/base/WhenClinicallyRecognized').default,
      },
      'shr.core': {
        'Address': require('./shr/core/Address').default,
        'AddressLine': require('./shr/core/AddressLine').default,
        'Age': require('./shr/core/Age').default,
        'AgeGroup': require('./shr/core/AgeGroup').default,
        'Altitude': require('./shr/core/Altitude').default,
        'AnatomicalDirection': require('./shr/core/AnatomicalDirection').default,
        'AnatomicalLocation': require('./shr/core/AnatomicalLocation').default,
        'AnatomicalLocationOrLandmarkCode': require('./shr/core/AnatomicalLocationOrLandmarkCode').default,
        'AnatomicalLocationPrecoordinated': require('./shr/core/AnatomicalLocationPrecoordinated').default,
        'AnatomicalLocationStructured': require('./shr/core/AnatomicalLocationStructured').default,
        'Annotation': require('./shr/core/Annotation').default,
        'Author': require('./shr/core/Author').default,
        'BeginDateTime': require('./shr/core/BeginDateTime').default,
        'BinaryData': require('./shr/core/BinaryData').default,
        'BodyPosition': require('./shr/core/BodyPosition').default,
        'Category': require('./shr/core/Category').default,
        'City': require('./shr/core/City').default,
        'ClockDirection': require('./shr/core/ClockDirection').default,
        'Code': require('./shr/core/Code').default,
        'CodeableConcept': require('./shr/core/CodeableConcept').default,
        'CodeSystem': require('./shr/core/CodeSystem').default,
        'CodeSystemVersion': require('./shr/core/CodeSystemVersion').default,
        'Coding': require('./shr/core/Coding').default,
        'CommentOrDescription': require('./shr/core/CommentOrDescription').default,
        'Comparator': require('./shr/core/Comparator').default,
        'ContactDetail': require('./shr/core/ContactDetail').default,
        'ContactPoint': require('./shr/core/ContactPoint').default,
        'ContentType': require('./shr/core/ContentType').default,
        'CorrectionFactor': require('./shr/core/CorrectionFactor').default,
        'Count': require('./shr/core/Count').default,
        'CountPerInterval': require('./shr/core/CountPerInterval').default,
        'Country': require('./shr/core/Country').default,
        'CreationTime': require('./shr/core/CreationTime').default,
        'DailyLifeEvent': require('./shr/core/DailyLifeEvent').default,
        'DataAsString': require('./shr/core/DataAsString').default,
        'DayOfWeek': require('./shr/core/DayOfWeek').default,
        'Denominator': require('./shr/core/Denominator').default,
        'Dimensions': require('./shr/core/Dimensions').default,
        'DisplayText': require('./shr/core/DisplayText').default,
        'Distance': require('./shr/core/Distance').default,
        'DistanceFromLandmark': require('./shr/core/DistanceFromLandmark').default,
        'District': require('./shr/core/District').default,
        'Duration': require('./shr/core/Duration').default,
        'DurationRange': require('./shr/core/DurationRange').default,
        'EffectiveTimePeriod': require('./shr/core/EffectiveTimePeriod').default,
        'EmbeddedContent': require('./shr/core/EmbeddedContent').default,
        'EndDateTime': require('./shr/core/EndDateTime').default,
        'EventDuration': require('./shr/core/EventDuration').default,
        'FamilyName': require('./shr/core/FamilyName').default,
        'Formalism': require('./shr/core/Formalism').default,
        'Frequency': require('./shr/core/Frequency').default,
        'GeopoliticalLocation': require('./shr/core/GeopoliticalLocation').default,
        'Geoposition': require('./shr/core/Geoposition').default,
        'GestationalAge': require('./shr/core/GestationalAge').default,
        'GestationalTemporalContext': require('./shr/core/GestationalTemporalContext').default,
        'GestationalTimePeriod': require('./shr/core/GestationalTimePeriod').default,
        'GivenName': require('./shr/core/GivenName').default,
        'Hash': require('./shr/core/Hash').default,
        'HumanName': require('./shr/core/HumanName').default,
        'Identifier': require('./shr/core/Identifier').default,
        'IntegerQuantity': require('./shr/core/IntegerQuantity').default,
        'Issuer': require('./shr/core/Issuer').default,
        'Language': require('./shr/core/Language').default,
        'Laterality': require('./shr/core/Laterality').default,
        'Latitude': require('./shr/core/Latitude').default,
        'LifeEventOffset': require('./shr/core/LifeEventOffset').default,
        'Longitude': require('./shr/core/Longitude').default,
        'LowerBound': require('./shr/core/LowerBound').default,
        'LowerLimit': require('./shr/core/LowerLimit').default,
        'MaxCount': require('./shr/core/MaxCount').default,
        'Media': require('./shr/core/Media').default,
        'MiddleName': require('./shr/core/MiddleName').default,
        'MillisecondsBetweenSamples': require('./shr/core/MillisecondsBetweenSamples').default,
        'MinCount': require('./shr/core/MinCount').default,
        'Money': require('./shr/core/Money').default,
        'Name': require('./shr/core/Name').default,
        'NameAsText': require('./shr/core/NameAsText').default,
        'NonOccurrenceTimeOrPeriod': require('./shr/core/NonOccurrenceTimeOrPeriod').default,
        'Number': require('./shr/core/Number').default,
        'NumberOfRepeats': require('./shr/core/NumberOfRepeats').default,
        'Numerator': require('./shr/core/Numerator').default,
        'OccurrenceDuration': require('./shr/core/OccurrenceDuration').default,
        'OccurrencePeriod': require('./shr/core/OccurrencePeriod').default,
        'OccurrenceTime': require('./shr/core/OccurrenceTime').default,
        'OccurrenceTimeOrPeriod': require('./shr/core/OccurrenceTimeOrPeriod').default,
        'OnBehalfOf': require('./shr/core/OnBehalfOf').default,
        'Origin': require('./shr/core/Origin').default,
        'ParsableContent': require('./shr/core/ParsableContent').default,
        'Percentage': require('./shr/core/Percentage').default,
        'PersonName': require('./shr/core/PersonName').default,
        'PhotographicImage': require('./shr/core/PhotographicImage').default,
        'PostalCode': require('./shr/core/PostalCode').default,
        'PreferredFlag': require('./shr/core/PreferredFlag').default,
        'Prefix': require('./shr/core/Prefix').default,
        'PriorityRank': require('./shr/core/PriorityRank').default,
        'Purpose': require('./shr/core/Purpose').default,
        'QualitativeDateTime': require('./shr/core/QualitativeDateTime').default,
        'QualitativeFrequency': require('./shr/core/QualitativeFrequency').default,
        'QualitativeLikelihood': require('./shr/core/QualitativeLikelihood').default,
        'Quantity': require('./shr/core/Quantity').default,
        'Range': require('./shr/core/Range').default,
        'Ratio': require('./shr/core/Ratio').default,
        'ReceivedTime': require('./shr/core/ReceivedTime').default,
        'RecurrenceInterval': require('./shr/core/RecurrenceInterval').default,
        'RecurrencePattern': require('./shr/core/RecurrencePattern').default,
        'RecurrenceRange': require('./shr/core/RecurrenceRange').default,
        'ResourceLocation': require('./shr/core/ResourceLocation').default,
        'ResourceSize': require('./shr/core/ResourceSize').default,
        'RouteIntoBody': require('./shr/core/RouteIntoBody').default,
        'SampledData': require('./shr/core/SampledData').default,
        'SemiquantDuration': require('./shr/core/SemiquantDuration').default,
        'SemiquantFrequency': require('./shr/core/SemiquantFrequency').default,
        'Setting': require('./shr/core/Setting').default,
        'Signatory': require('./shr/core/Signatory').default,
        'Signature': require('./shr/core/Signature').default,
        'SignatureType': require('./shr/core/SignatureType').default,
        'SimpleQuantity': require('./shr/core/SimpleQuantity').default,
        'State': require('./shr/core/State').default,
        'Statistic': require('./shr/core/Statistic').default,
        'StatisticType': require('./shr/core/StatisticType').default,
        'Status': require('./shr/core/Status').default,
        'Suffix': require('./shr/core/Suffix').default,
        'TelecomNumberOrAddress': require('./shr/core/TelecomNumberOrAddress').default,
        'Text': require('./shr/core/Text').default,
        'TimeOfDay': require('./shr/core/TimeOfDay').default,
        'TimePeriod': require('./shr/core/TimePeriod').default,
        'Timing': require('./shr/core/Timing').default,
        'TimingCode': require('./shr/core/TimingCode').default,
        'Title': require('./shr/core/Title').default,
        'Type': require('./shr/core/Type').default,
        'UnitedStatesAddress': require('./shr/core/UnitedStatesAddress').default,
        'UnitedStatesState': require('./shr/core/UnitedStatesState').default,
        'Units': require('./shr/core/Units').default,
        'UpperBound': require('./shr/core/UpperBound').default,
        'UpperLimit': require('./shr/core/UpperLimit').default,
        'VersionId': require('./shr/core/VersionId').default,
        'VersionString': require('./shr/core/VersionString').default,
      },
      'shr.encounter': {
        'DetailedEncounter': require('./shr/encounter/DetailedEncounter').default,
        'Diagnosis': require('./shr/encounter/Diagnosis').default,
        'DiagnosisCode': require('./shr/encounter/DiagnosisCode').default,
        'Encounter': require('./shr/encounter/Encounter').default,
        'EncounterClass': require('./shr/encounter/EncounterClass').default,
        'EncounterType': require('./shr/encounter/EncounterType').default,
      },
      'shr.entity': {
        'AccessionIdentifier': require('./shr/entity/AccessionIdentifier').default,
        'AccessTime': require('./shr/entity/AccessTime').default,
        'ActiveFlag': require('./shr/entity/ActiveFlag').default,
        'Actual': require('./shr/entity/Actual').default,
        'Additive': require('./shr/entity/Additive').default,
        'AdministrativeGender': require('./shr/entity/AdministrativeGender').default,
        'Affiliation': require('./shr/entity/Affiliation').default,
        'AgeAtDeath': require('./shr/entity/AgeAtDeath').default,
        'AnonymizedFlag': require('./shr/entity/AnonymizedFlag').default,
        'BirthSex': require('./shr/entity/BirthSex').default,
        'Brand': require('./shr/entity/Brand').default,
        'BrandName': require('./shr/entity/BrandName').default,
        'Capacity': require('./shr/entity/Capacity').default,
        'CollectionMethod': require('./shr/entity/CollectionMethod').default,
        'CollectionSite': require('./shr/entity/CollectionSite').default,
        'CollectionSource': require('./shr/entity/CollectionSource').default,
        'CollectionTime': require('./shr/entity/CollectionTime').default,
        'CountryOfIssue': require('./shr/entity/CountryOfIssue').default,
        'DateOfBirth': require('./shr/entity/DateOfBirth').default,
        'DateOfDeath': require('./shr/entity/DateOfDeath').default,
        'DeathInformation': require('./shr/entity/DeathInformation').default,
        'Device': require('./shr/entity/Device').default,
        'DeviceUdi': require('./shr/entity/DeviceUdi').default,
        'DoseForm': require('./shr/entity/DoseForm').default,
        'DriversLicenseInformation': require('./shr/entity/DriversLicenseInformation').default,
        'DriversLicenseNumber': require('./shr/entity/DriversLicenseNumber').default,
        'Entity': require('./shr/entity/Entity').default,
        'EntityOrRole': require('./shr/entity/EntityOrRole').default,
        'Ethnicity': require('./shr/entity/Ethnicity').default,
        'EthnicityCode': require('./shr/entity/EthnicityCode').default,
        'EthnicityDetail': require('./shr/entity/EthnicityDetail').default,
        'ExcludeFlag': require('./shr/entity/ExcludeFlag').default,
        'ExpirationDate': require('./shr/entity/ExpirationDate').default,
        'ExternalHealthRecord': require('./shr/entity/ExternalHealthRecord').default,
        'Facility': require('./shr/entity/Facility').default,
        'FacilityName': require('./shr/entity/FacilityName').default,
        'FathersName': require('./shr/entity/FathersName').default,
        'FictionalPersonFlag': require('./shr/entity/FictionalPersonFlag').default,
        'Group': require('./shr/entity/Group').default,
        'GroupCharacteristic': require('./shr/entity/GroupCharacteristic').default,
        'GroupCharacteristicCode': require('./shr/entity/GroupCharacteristicCode').default,
        'GroupCharacteristicValue': require('./shr/entity/GroupCharacteristicValue').default,
        'HandlingRisk': require('./shr/entity/HandlingRisk').default,
        'InactiveFlag': require('./shr/entity/InactiveFlag').default,
        'Ingredient': require('./shr/entity/Ingredient').default,
        'IngredientAmount': require('./shr/entity/IngredientAmount').default,
        'IsActiveIngredient': require('./shr/entity/IsActiveIngredient').default,
        'IsBrand': require('./shr/entity/IsBrand').default,
        'IsDeceased': require('./shr/entity/IsDeceased').default,
        'IsMultipleBirth': require('./shr/entity/IsMultipleBirth').default,
        'LanguageQualifier': require('./shr/entity/LanguageQualifier').default,
        'LanguageUsed': require('./shr/entity/LanguageUsed').default,
        'Location': require('./shr/entity/Location').default,
        'LotNumber': require('./shr/entity/LotNumber').default,
        'ManagingOrganization': require('./shr/entity/ManagingOrganization').default,
        'ManufactureDate': require('./shr/entity/ManufactureDate').default,
        'Manufacturer': require('./shr/entity/Manufacturer').default,
        'ManufacturerName': require('./shr/entity/ManufacturerName').default,
        'MaritalStatus': require('./shr/entity/MaritalStatus').default,
        'MedicalInterpreter': require('./shr/entity/MedicalInterpreter').default,
        'MedicalInterpreterNeeded': require('./shr/entity/MedicalInterpreterNeeded').default,
        'Medication': require('./shr/entity/Medication').default,
        'Member': require('./shr/entity/Member').default,
        'MemberParticipation': require('./shr/entity/MemberParticipation').default,
        'MobileFacility': require('./shr/entity/MobileFacility').default,
        'MothersMaidenName': require('./shr/entity/MothersMaidenName').default,
        'MultipleBirthInformation': require('./shr/entity/MultipleBirthInformation').default,
        'MultipleBirthOrder': require('./shr/entity/MultipleBirthOrder').default,
        'NationalProviderIdentifier': require('./shr/entity/NationalProviderIdentifier').default,
        'Organization': require('./shr/entity/Organization').default,
        'OrganizationIdentifier': require('./shr/entity/OrganizationIdentifier').default,
        'OrganizationName': require('./shr/entity/OrganizationName').default,
        'OverTheCounter': require('./shr/entity/OverTheCounter').default,
        'Package': require('./shr/entity/Package').default,
        'PartOf': require('./shr/entity/PartOf').default,
        'PassportInformation': require('./shr/entity/PassportInformation').default,
        'PassportNumber': require('./shr/entity/PassportNumber').default,
        'Patient': require('./shr/entity/Patient').default,
        'Person': require('./shr/entity/Person').default,
        'PlaceOfBirth': require('./shr/entity/PlaceOfBirth').default,
        'Practitioner': require('./shr/entity/Practitioner').default,
        'Qualification': require('./shr/entity/Qualification').default,
        'Race': require('./shr/entity/Race').default,
        'RaceCode': require('./shr/entity/RaceCode').default,
        'RaceDetail': require('./shr/entity/RaceDetail').default,
        'RelatedPerson': require('./shr/entity/RelatedPerson').default,
        'RelationshipToPersonOfRecord': require('./shr/entity/RelationshipToPersonOfRecord').default,
        'Role': require('./shr/entity/Role').default,
        'SequenceNumber': require('./shr/entity/SequenceNumber').default,
        'SocialSecurityNumber': require('./shr/entity/SocialSecurityNumber').default,
        'SourceSpecimen': require('./shr/entity/SourceSpecimen').default,
        'SpecialHandling': require('./shr/entity/SpecialHandling').default,
        'Specimen': require('./shr/entity/Specimen').default,
        'SpecimenContainer': require('./shr/entity/SpecimenContainer').default,
        'SpecimenQuantity': require('./shr/entity/SpecimenQuantity').default,
        'SpecimenStatus': require('./shr/entity/SpecimenStatus').default,
        'SpecimenTreatment': require('./shr/entity/SpecimenTreatment').default,
        'SpokenLanguageProficiency': require('./shr/entity/SpokenLanguageProficiency').default,
        'StateOfIssue': require('./shr/entity/StateOfIssue').default,
        'Substance': require('./shr/entity/Substance').default,
        'SubstanceOrCode': require('./shr/entity/SubstanceOrCode').default,
        'Url': require('./shr/entity/Url').default,
        'VendorModelNumber': require('./shr/entity/VendorModelNumber').default,
        'WrittenLanguageProficiency': require('./shr/entity/WrittenLanguageProficiency').default,
      },
      'shr.financial': {
        'Coverage': require('./shr/financial/Coverage').default,
        'InsuranceMemberId': require('./shr/financial/InsuranceMemberId').default,
        'PolicyHolder': require('./shr/financial/PolicyHolder').default,
      },
      'shr.medication': {
        'AdditionalDosageInstruction': require('./shr/medication/AdditionalDosageInstruction').default,
        'AsNeededIndicator': require('./shr/medication/AsNeededIndicator').default,
        'Dosage': require('./shr/medication/Dosage').default,
        'DosageBodySite': require('./shr/medication/DosageBodySite').default,
        'DosageInstructionsText': require('./shr/medication/DosageInstructionsText').default,
        'DosageMethod': require('./shr/medication/DosageMethod').default,
        'DoseAmount': require('./shr/medication/DoseAmount').default,
        'MaximumDosePerTimePeriod': require('./shr/medication/MaximumDosePerTimePeriod').default,
        'MedicationAdherence': require('./shr/medication/MedicationAdherence').default,
        'MedicationAdministered': require('./shr/medication/MedicationAdministered').default,
        'MedicationAfterChange': require('./shr/medication/MedicationAfterChange').default,
        'MedicationBeforeChange': require('./shr/medication/MedicationBeforeChange').default,
        'MedicationChange': require('./shr/medication/MedicationChange').default,
        'MedicationDispensed': require('./shr/medication/MedicationDispensed').default,
        'MedicationNonAdherenceReason': require('./shr/medication/MedicationNonAdherenceReason').default,
        'MedicationNotAdministered': require('./shr/medication/MedicationNotAdministered').default,
        'MedicationNotDispensed': require('./shr/medication/MedicationNotDispensed').default,
        'MedicationNotPrescribed': require('./shr/medication/MedicationNotPrescribed').default,
        'MedicationRequested': require('./shr/medication/MedicationRequested').default,
        'MedicationStatement': require('./shr/medication/MedicationStatement').default,
        'NumberOfRefillsAllowed': require('./shr/medication/NumberOfRefillsAllowed').default,
        'QuantityPerDispense': require('./shr/medication/QuantityPerDispense').default,
        'SubstitutionAllowed': require('./shr/medication/SubstitutionAllowed').default,
        'SupplyDuration': require('./shr/medication/SupplyDuration').default,
        'TimingOfDoses': require('./shr/medication/TimingOfDoses').default,
      },
      'shr.procedure': {
        'Access': require('./shr/procedure/Access').default,
        'AmountOrSize': require('./shr/procedure/AmountOrSize').default,
        'DiagnosticImagingPerformed': require('./shr/procedure/DiagnosticImagingPerformed').default,
        'DirectSite': require('./shr/procedure/DirectSite').default,
        'DirectSiteCode': require('./shr/procedure/DirectSiteCode').default,
        'FHIRProcedureParticipant': require('./shr/procedure/FHIRProcedureParticipant').default,
        'ImagingProcedurePerformed': require('./shr/procedure/ImagingProcedurePerformed').default,
        'ImagingSubstance': require('./shr/procedure/ImagingSubstance').default,
        'Indication': require('./shr/procedure/Indication').default,
        'IndirectDevice': require('./shr/procedure/IndirectDevice').default,
        'IndirectDeviceCode': require('./shr/procedure/IndirectDeviceCode').default,
        'IndirectSite': require('./shr/procedure/IndirectSite').default,
        'IndirectSiteCode': require('./shr/procedure/IndirectSiteCode').default,
        'InputFinding': require('./shr/procedure/InputFinding').default,
        'LaboratoryProcedurePerformed': require('./shr/procedure/LaboratoryProcedurePerformed').default,
        'OutputFinding': require('./shr/procedure/OutputFinding').default,
        'ProcedureCode': require('./shr/procedure/ProcedureCode').default,
        'ProcedureNotPerformed': require('./shr/procedure/ProcedureNotPerformed').default,
        'ProcedurePerformed': require('./shr/procedure/ProcedurePerformed').default,
        'ProcedureRequested': require('./shr/procedure/ProcedureRequested').default,
        'ProcedureRequestedAgainst': require('./shr/procedure/ProcedureRequestedAgainst').default,
        'SpecimenCollectionPerformed': require('./shr/procedure/SpecimenCollectionPerformed').default,
        'SurgicalApproach': require('./shr/procedure/SurgicalApproach').default,
        'SurgicalProcedurePerformed': require('./shr/procedure/SurgicalProcedurePerformed').default,
        'UsingAccessDevice': require('./shr/procedure/UsingAccessDevice').default,
        'UsingAccessDeviceCode': require('./shr/procedure/UsingAccessDeviceCode').default,
        'UsingDevice': require('./shr/procedure/UsingDevice').default,
        'UsingDeviceCode': require('./shr/procedure/UsingDeviceCode').default,
      },
      'shr.research': {
        'Enrollment': require('./shr/research/Enrollment').default,
        'Jurisdiction': require('./shr/research/Jurisdiction').default,
        'PrincipalInvestigator': require('./shr/research/PrincipalInvestigator').default,
        'ResearchSubject': require('./shr/research/ResearchSubject').default,
        'Sponsor': require('./shr/research/Sponsor').default,
        'Study': require('./shr/research/Study').default,
        'StudyArm': require('./shr/research/StudyArm').default,
        'TerminationReason': require('./shr/research/TerminationReason').default,
      },
      'tumor': {
        'Cellularity': require('./tumor/Cellularity').default,
        'IsPrimaryTumor': require('./tumor/IsPrimaryTumor').default,
        'PercentageInSituCarcinoma': require('./tumor/PercentageInSituCarcinoma').default,
        'SizeOfGrossTumorBed': require('./tumor/SizeOfGrossTumorBed').default,
        'TumorDimension1': require('./tumor/TumorDimension1').default,
        'TumorDimension2': require('./tumor/TumorDimension2').default,
        'TumorDimension3': require('./tumor/TumorDimension3').default,
        'TumorDimensions': require('./tumor/TumorDimensions').default,
        'TumorMarginDescription': require('./tumor/TumorMarginDescription').default,
        'TumorMargins': require('./tumor/TumorMargins').default,
        'TumorPresent': require('./tumor/TumorPresent').default,
      },
    };
  }

  /**
   * Get the class object for the given namespace and model class name.
   * I.e., the actual class is returned, not an instance of it.
   * In most cases this will be the original class,
   * but when a subclass has been defined and registered then it will be returned here.
   * @param {string} namespace - The full namespace of the desired class, ex. 'shr.base'.
   * @param {string} name - The name of the class, ex. 'Entry'
   * @return {Class} the desired class or a subclass of it with fixes/extensions
   */
  get(namespace, name) {
    return this.internalRegistry[namespace][name];
  }

  /**
   * Register a replacement class object for the given namespace and model class name.
   * Note that this does no validation that the given class is a true drop-in replacement of the original class
   * @param {string} namespace - The full namespace of the class, ex. 'shr.base'.
   * @param {string} name - The name of the class, ex. 'Entry'
   * @param {Class} klass - The new class object to be returned when 
   */
  set(namespace, name, klass) {
    this.internalRegistry[namespace][name] = klass;
  }
}

// singleton pattern
const ClassRegistry = new Registry();
export default ClassRegistry;
